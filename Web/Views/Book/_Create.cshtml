<div class="modal fade" tabindex="-1" id="bookModal"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    ×
                </button>
                <h4 class="modal-title">Create a book</h4>
            </div>
            <div class="modal-body">
                <form id="createBookForm">
                    <div class="form-group" hidden>
                        <input class="form-control" type="text" id="Id" name="Id" />
                    </div>
                    <div class="form-group">
                        <label for="Name">Book Name:</label>
                        <input class="form-control" type="text" id="Name" name="Name" placeholder="Select Book Name" required maxlength="100" />
                    </div>

                    <div class="form-group">
                        <label for="ReleaseDate">Release Date:</label>
                        <input class="form-control" type="date" id="ReleaseDate" min="1753-01-01" name="ReleaseDate" required />
                    </div>

                    <div class="form-group">
                        <label for="Authors">Authors:</label>
                        <select class="form-control" id="AuthorIds" name="AuthorIds" multiple="multiple" required>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="Rate">Rate:</label>
                        <input class="form-control" type="number" id="Rate" name="Rate" min="1" max="10" placeholder="Select Rate [1..10]" required />
                    </div>

                    <div class="form-group">
                        <label for="PageNumber">Page Number:</label>
                        <input class="form-control" type="number" id="PageNumber" name="PageNumber" min="1" max="10000" placeholder="Select Page Number" required />
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">
                            Create
                        </button>
                        <button type="button" id="btnHideModal" class="btn btn-primary button button4">
                            Close
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        // init
        var today = new Date();
        $("#ReleaseDate").prop("max", formatDate(today));

        var authors = [];
        $.ajax({
            cache: false,
            url: '@Url.Action("GetAuthors", "Author")',
            type: 'GET',
            success: function (result) {
                authors = result;

                $.each(authors, function (index, value) {
                    $('#AuthorIds').append(
                        '<option value="' + authors[index].Id + '">' + authors[index].Text + '</option>'
                    );
                });
            }
        });

        $('#AuthorIds').select2({
            placeholder: 'Select authors'
        });

        // submit
        $("#createBookForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);
            var id = +$("#Id").val();
            var url = id == 0 ? "@Url.Action("Create", "Book")" : "@Url.Action("Edit", "Book")";
            $.ajax({
                type: "POST",
                url: url,
                data: form.serialize(),
                success: function (data) {
                    $("#btnHideModal").click();
                    $('#createBookForm').trigger("reset");
                    $('#AuthorIds').val("").trigger('change');
                    var releaseDate = dateFromJsonNumber(data.ReleaseDate);
                    var authors = data.Authors.map(function (author) {
                        return `<a  href="/Author/Edit/${author.Id}?firstName=${author.FirstName}&lastName=${author.LastName}">${author.FirstName} ${author.LastName}</a><br/>`;
                    });
                    if (id) { // update book row
                        $("#booksList tr").each(function (row) {
                            if (row != 0) {
                                $row = $(this);
                                var rowId = $row.find("td:first")[0].innerText;
                                if (rowId == id) {
                                    $row[0].children[1].innerText = data.Name;
                                    $row[0].children[2].innerHTML = authors.join('');
                                    $row[0].children[3].innerText = formatDate(releaseDate);
                                    $row[0].children[4].innerText = data.Rate;
                                    $row[0].children[5].innerText = data.PageNumber;
                                    return false;
                                }
                            }
                        });
                    }
                    else {  // add book row
                        $('#booksList tr:first')
                            .after(`<tr><td>${data.Id}</td>` +
                                `<td>${data.Name}</td>` +
                                `<td>${authors.join('')}</td>` +
                                `<td>${formatDate(releaseDate)}</td>` +
                                `<td>${data.Rate}</td>` +
                                `<td>${data.PageNumber}</td>` +
                                `<td><a class="edit-book" href="#">Edit</a><br/>` +
                                `<a class="delete-book" href="#">Delete</a>`);
                    }
                },
                error: function (data) {
                    $('#AuthorIds').validate();
                }
            });


        });

        // helper
        function formatDate(date) {
            let dd = date.getDate();
            let mm = date.getMonth() + 1;
            const yyyy = date.getFullYear();
            if (dd < 10) {
                dd = `0${dd}`;
            }
            if (mm < 10) {
                mm = `0${mm}`;
            }
            return `${yyyy}-${mm}-${dd}`;
        }

        function dateFromJsonNumber(value) {
            var date = new Date(parseInt(value.replace("/Date(", "").replace(")/", ""), 10));
            return date;
        }
    });
</script>
